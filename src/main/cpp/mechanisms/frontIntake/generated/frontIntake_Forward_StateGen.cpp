// clang-format off
//====================================================================================================================================================
// Copyright 2023 Lake Orion Robotics FIRST Team 302
//
// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"),
// to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense,
// and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE
// OR OTHER DEALINGS IN THE SOFTWARE.
//====================================================================================================================================================
// This file was automatically generated by the Team 302 code generator version 1.1.0.0
// Generated on Friday, December 22, 2023 8:44:46 PM

// C++ Includes
#include <string>

// FRC includes

// Team 302 includes
#include "mechanisms/frontIntake/generated/frontIntake_gen.h"
#include "mechanisms/frontIntake/generated/frontIntake_Forward_StateGen.h"
#include "mechanisms/base/BaseMech.h"

#include <utils/logging/LoggableItemMgr.h>
#include "utils/logging/Logger.h"
#include <utils/logging/LoggerData.h>
#include <utils/logging/LoggerEnums.h>

// Third Party Includes

using std::string;

/// @class frontIntakeForwardStateGen
/// @brief information about the control (open loop, closed loop position, closed loop velocity, etc.) for a mechanism state
frontIntakeForwardStateGen::frontIntakeForwardStateGen ( string stateName,
        int stateId,
        frontIntake_gen &mech ) : frontIntakeBaseStateGen ( stateName, stateId, mech )
{
}

void frontIntakeForwardStateGen::Init()
{
	Logger::GetLogger()->LogData ( LOGGER_LEVEL::PRINT, string ( "ArrivedAt" ), string ( "frontIntakeForwardStateGen" ), string ( "init" ) );

	frontIntakeBaseStateGen::Init();
}

void frontIntakeForwardStateGen::Run()
{
	Logger::GetLogger()->LogData ( LOGGER_LEVEL::PRINT, string ( "ArrivedAt" ), string ( "frontIntakeForwardStateGen" ), string ( "run" ) );
	frontIntakeBaseStateGen::Run();
}

void frontIntakeForwardStateGen::Exit()
{
	frontIntakeBaseStateGen::Exit();
}

bool frontIntakeForwardStateGen::AtTarget()
{
	return frontIntakeBaseStateGen::AtTarget();
}
